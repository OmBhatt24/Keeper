{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","Footer","year","Date","getFullYear","Note","props","className","title","content","onClick","onDelete","id","CreateArea","useState","note","setNote","isActive","setActive","handleChange","event","target","name","value","prevValue","onSubmit","e","preventDefault","onChange","placeholder","rows","Zoom","in","Fab","addNote","App","notes","setNotes","deleteNote","filter","index","prevNotes","map","key","ReactDOM","render","document","getElementById"],"mappings":"uPAceA,MAXf,WACE,OACE,gCACE,4BACE,kBAAC,IAAD,MADF,YCKSC,MATf,WACE,IAAMC,GAAO,IAAIC,MAAOC,cACxB,OACE,gCACE,+CAAgBF,K,iBCaPG,MAhBf,SAAcC,GACZ,OACE,yBAAKC,UAAU,QACb,4BAAKD,EAAME,OACX,2BAAIF,EAAMG,SACV,4BACEC,QAAS,WACPJ,EAAMK,SAASL,EAAMM,MAGvB,kBAAC,IAAD,S,gDCmCOC,MA3Cf,SAAoBP,GAClB,MAAwBQ,mBAAS,CAC/BN,MAAO,GACPC,QAAS,KAFX,mBAAOM,EAAP,KAAaC,EAAb,KAIA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdP,GAAQ,SAACQ,GAAD,mBAAC,eAAoBA,GAArB,kBAAiCF,EAAOC,QAMlD,OACE,6BACE,0BAAME,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBAAkBpB,UAAU,eAClDU,GACC,2BACEW,SAAUT,EACVG,KAAK,QACLO,YAAY,QACZN,MAAOR,EAAKP,QAGhB,8BACEoB,SAAUT,EACVG,KAAK,UACLO,YAAY,iBACZC,KAAMb,EAAW,IAAM,IACvBP,QAAS,kBAAMQ,GAAU,IACzBK,MAAOR,EAAKN,UAEd,kBAACsB,EAAA,EAAD,CAAMC,GAAIf,GACR,kBAACgB,EAAA,EAAD,CAAKvB,QAxBO,WAClBJ,EAAM4B,QAAQnB,GACdC,EAAQ,CAAER,MAAO,GAAIC,QAAS,OAuBtB,kBAAC,IAAD,WCJG0B,MA9Bf,WACE,MAA0BrB,mBAAS,IAAnC,mBAAOsB,EAAP,KAAcC,EAAd,KAMMC,EAAa,SAAC1B,GAClByB,EAASD,EAAMG,QAAO,SAACxB,EAAMyB,GAAP,OAAiBA,IAAU5B,OAEnD,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYsB,QAXA,SAACnB,GACfsB,GAAS,SAACI,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsB1B,UAUrBqB,EAAMM,KAAI,SAAC3B,EAAMyB,GAChB,OACE,kBAAC,EAAD,CACEG,IAAKH,EACL5B,GAAI4B,EACJhC,MAAOO,EAAKP,MACZC,QAASM,EAAKN,QACdE,SAAU2B,OAIhB,kBAAC,EAAD,QC3BNM,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.518245c8.chunk.js","sourcesContent":["import React from \"react\";\nimport HighlightIcon from \"@material-ui/icons/Highlight\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>\n        <HighlightIcon />\n        Keeper\n      </h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright â“’ {year}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nfunction Note(props) {\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <button\n        onClick={() => {\n          props.onDelete(props.id);\n        }}\n      >\n        <DeleteIcon />\n      </button>\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nfunction CreateArea(props) {\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [isActive, setActive] = useState(false);\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setNote((prevValue) => ({ ...prevValue, [name]: value }));\n  };\n  const handleClick = () => {\n    props.addNote(note);\n    setNote({ title: \"\", content: \"\" });\n  };\n  return (\n    <div>\n      <form onSubmit={(e) => e.preventDefault()} className=\"create-note\">\n        {isActive && (\n          <input\n            onChange={handleChange}\n            name=\"title\"\n            placeholder=\"Title\"\n            value={note.title}\n          />\n        )}\n        <textarea\n          onChange={handleChange}\n          name=\"content\"\n          placeholder=\"Take a note...\"\n          rows={isActive ? \"3\" : \"1\"}\n          onClick={() => setActive(true)}\n          value={note.content}\n        />\n        <Zoom in={isActive}>\n          <Fab onClick={handleClick}>\n            <AddIcon />\n          </Fab>\n        </Zoom>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const addNote = (note) => {\n    setNotes((prevNotes) => {\n      return [...prevNotes, note];\n    });\n  };\n  const deleteNote = (id) => {\n    setNotes(notes.filter((note, index) => index !== id));\n  };\n  return (\n    <div>\n      <Header />\n      <CreateArea addNote={addNote} />\n      {notes.map((note, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={note.title}\n            content={note.content}\n            onDelete={deleteNote}\n          />\n        );\n      })}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n\n//This is the end result you're aiming for:\n//https://pogqj.csb.app/\n"],"sourceRoot":""}